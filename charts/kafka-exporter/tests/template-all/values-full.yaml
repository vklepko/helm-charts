replicaCount: 1

image:
  repository: zifter/kafka_exporter
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
   capabilities:
     drop:
     - ALL
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
     kubernetes.io/ingress.class: nginx
     kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: chart-example-tls
      hosts:
        - chart-example.local

resources:
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 100m
     memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Prometheus rules
rules:
  enabled: true
  # Check minimum replicas for topic
  minReplicas:
    enabled: true
    count: 3
  # Check minimum partitions for topic
  minPartitions:
    enabled: true
    count: 6
  # Check consumer lag
  consumerGroupLag:
    enabled: true
    # More than threshold is alert
    threshold: 100
    # Exclude some groups from rule
    excludeGroups: []

# Grafana dashboards
dashboards:
  enabled: true
  # Labels to add dashboard
  labels:
    # default grafana dashboard discovery label with stub value
    # Override this value if you use custom grafana label
    # https://github.com/grafana/helm-charts/blob/grafana-6.16.3/charts/grafana/values.yaml#L629
    grafana_dashboard: '1'
  # Folder to put dashboard in grafana
  # Will be used default if it's empty
  targetFolder: ""

# Prometheus service monitor
metrics:
  enabled: true
  # Interval between metrics scraping
  interval: 1m

# Kafka clusters to export metrics
kafka:
  - name: kafka
    # list of brokers of cluster to monitor
    brokers:
      - host1:9092
      - host2:9092
  - name: kafka-sasl
    # if sasl is enabled provide user
    user: user
    # if sasl is enabled provide password
    password: pass
    # SASL mechanism can be plain, scram-sha512, scram-sha256
    mechanism: plain
    # list of brokers of cluster to monitor
    brokers:
      - host1:9092
      - host2:9092
      - host2:9092
